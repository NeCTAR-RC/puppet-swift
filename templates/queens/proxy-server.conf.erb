[DEFAULT]
bind_ip = <%= @listen %>
bind_port = <%= @port %>
# bind_timeout = 30
# backlog = 4096
# swift_dir = /etc/swift
# user = swift
workers = <%= @workers %>

[pipeline:main]
pipeline = catch_errors gatekeeper healthcheck proxy-logging cache bulk domain_remap tempurl ratelimit swift3 authtoken s3token keystoneauth copy staticweb container-quotas account-quotas slo dlo versioned_writes symlink proxy-logging proxy-server

[app:proxy-server]
use = egg:swift#proxy
allow_account_management = true
<% if @account_autocreate == true -%>
account_autocreate = true
<% end -%>
<% if @read_affinity -%>
sorting_method = affinity
read_affinity = <%= @read_affinity %>
<% end -%>
<% if @write_affinity -%>
write_affinity = <%= @write_affinity %>
write_affinity_node_count = <%=@write_affinity_node_count %> * replicas
<% end -%>

[filter:authtoken]
paste.filter_factory = keystonemiddleware.auth_token:filter_factory
# Delaying the auth decision is required to support token-less
# usage for anonymous referrers ('.r:*').
auth_plugin = password
www_authenticate_uri = <%= @keystone_protocol %>://<%= @keystone_host %>:5000
auth_url = <%= @keystone_protocol %>://<%= @keystone_host %>:5000
username = <%= @keystone_user %>
password = <%= @keystone_password %>
project_name = <%= @keystone_service_tenant %>
user_domain_name = default
project_domain_name = default

delay_auth_decision = True
cache = swift.cache
include_service_catalog = False

[filter:keystoneauth]
use = egg:swift#keystoneauth
operator_roles = Admin,Member,admin,ResellerAdmin,bot_user
is_admin = true
cache = swift.cache

[filter:s3token]
paste.filter_factory = swift3.s3_token_middleware:filter_factory
auth_uri = <%= @keystone_protocol %>://<%= @keystone_host %>:5000
auth_version = 3
delay_auth_decision = True

[filter:container-quotas]
use = egg:swift#container_quotas

[filter:account-quotas]
use = egg:swift#account_quotas

[filter:cache]
use = egg:swift#memcache
set log_name = cache

[filter:catch_errors]
use = egg:swift#catch_errors

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:proxy-logging]
use = egg:swift#proxy_logging
set log_facility = LOG_USER

[filter:swift3]
use = egg:swift3#swift3

[filter:tempurl]
use = egg:swift#tempurl

[filter:formpost]
use = egg:swift#formpost

[filter:bulk]
use = egg:swift#bulk
max_containers_per_extraction = 10000
max_failed_files = 1000

[filter:dlo]
use = egg:swift#dlo

[filter:slo]
use = egg:swift#slo

[filter:staticweb]
use = egg:swift#staticweb

[filter:versioned_writes]
use = egg:swift#versioned_writes
allow_versioned_writes = true

[filter:gatekeeper]
use = egg:swift#gatekeeper
# Set this to false if you want to allow clients to set arbitrary X-Timestamps
# on uploaded objects. This may be used to preserve timestamps when migrating
# from a previous storage system, but risks allowing users to upload
# difficult-to-delete data.
# shunt_inbound_x_timestamp = true

[filter:ratelimit]
use = egg:swift#ratelimit
# You can override the default log routing for this filter here:
# set log_name = ratelimit
# set log_facility = LOG_LOCAL0
# set log_level = INFO
# set log_headers = false
# set log_address = /dev/log
#
# clock_accuracy should represent how accurate the proxy servers' system clocks
# are with each other. 1000 means that all the proxies' clock are accurate to
# each other within 1 millisecond.  No ratelimit should be higher than the
# clock accuracy.
# clock_accuracy = 1000
#
# max_sleep_time_seconds = 60
#
# log_sleep_time_seconds of 0 means disabled
# log_sleep_time_seconds = 0
#
# allows for slow rates (e.g. running up to 5 sec's behind) to catch up.
# rate_buffer_seconds = 5
#
# account_ratelimit of 0 means disabled
# account_ratelimit = 0

# DEPRECATED- these will continue to work but will be replaced
# by the X-Account-Sysmeta-Global-Write-Ratelimit flag.
# Please see ratelimiting docs for details.
# these are comma separated lists of account names
# account_whitelist = a,b
# account_blacklist = c,d

# with container_limit_x = r
# for containers of size x limit write requests per second to r.  The container
# rate will be linearly interpolated from the values given. With the values
# below, a container of size 5 will get a rate of 75.
# container_ratelimit_0 = 100
# container_ratelimit_10 = 50
# container_ratelimit_50 = 20

# Similarly to the above container-level write limits, the following will limit
# container GET (listing) requests.
# container_listing_ratelimit_0 = 100
# container_listing_ratelimit_10 = 50
# container_listing_ratelimit_50 = 20

[filter:copy]
use = egg:swift#copy
# By default object POST requests update metadata without modification of the
# original data file
# Set this to True to enable the old, slow behavior wherein object POST
# requests are transformed into COPY requests where source and destination are
# the same. All client-visible behavior (save response time) should be
# identical.
# This option is deprecated and will be ignored in a future release.
# object_post_as_copy = false

[filter:symlink]
use = egg:swift#symlink
# Symlinks can point to other symlinks provided the number of symlinks in a
# chain does not exceed the symloop_max value. If the number of chained
# symlinks exceeds the limit symloop_max a 409 (HTTPConflict) error
# response will be produced.
# symloop_max = 2

[filter:domain_remap]
use = egg:swift#domain_remap
# Specify the storage_domain that match your cloud, multiple domains
# can be specified separated by a comma
storage_domain = <%= @storage_domain %>
